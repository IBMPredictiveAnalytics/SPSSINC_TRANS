<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
<head>
  <meta http-equiv="Content-Type" content=
  "text/html; charset=utf-8">

  <title>Применение функций Python к наблюдениям</title>
  <style type="text/css">

  <!-- 

  H1 {font-weight:bold; color:#006699; font-size:125%; }
  H2 {font-weight:bold; color:#006699; font-size:110%; }
  TABLE {font-size:100%;}

  /* paragraph tags */
  .step {text-indent: -1.3em; margin-left:1.3em; margin-top: 0px;}
  .menuselection {margin-left:10px}
  .bullet {list-style-type: disc;margin-top:12px; margin-left:36px; text-indent:-1em; }
  .codeblock {background-color: #ffffe6; display:block; margin-left:5px; padding:5px;}

  /* inline tags */
  .screen {font-weight:bold; color:#408080}                       /*** used refer to on-screen text ***/
  .name {font-style: italic}                                                       /*** used to tag names, such as variable names, file names, and so forth ***/
  .runinhead {font-weight: bold} 
  .superscript {vertical-align:super; font-size:80%}
  .subscript {vertical-align:sub; font-size:80%}


  --> 
  </style>
</head>

<body>
  <h1>Применение функций Python к наблюдениям</h1>Эта процедура применяет функцию Python к наблюдениям в активном наборе данных и сохраняет результаты в одной или нескольких переменных. Переменные могут быть, как уже существующими, так и новыми. Это позволяет
использовать функции Python либо из стандартной библиотеки Python, либо из модулей Developer Central, либо из модулей,
созданных вами или другими людьми, так, как будто эти функции встроены в IBM® SPSS® Statistics.

  <p class="step">Чтобы запустить эту процедуру, выберите в меню:</p>

  <p class="menuselection">&nbsp;Преобразование<br>
  &nbsp;&nbsp;Программируемые преобразования...</p>

  <p><span class="runinhead">Результирующие переменные.</span> Обычно функция возвращает одно числовое или текстовое значение,
но функции могут возвращать и несколько значений для одного наблюдения. Введите имена переменных для такого количества значений, какое будет возвращено функцией. Если функция возвратит меньше значений дня некоторых наблюдений, лишние переменные будут системными пропущенными для числовых переменных и пробелами для текстовых.</p>

  <p><span class="runinhead">Коды типов.</span> Введите код типа для каждой результирующей переменной. Для числовой переменной введите D. Для текстовой - длину в битах.</p>

  <p class="bullet">•&nbsp;Если вы изменяете тип существующей переменной, ее значения могут быть потеряны и, как следствие, недоступны для формулы преобразований.</p>

  <p><span class="runinhead">Формула преобразований.</span> Введите выражение, задающее вызываемый модуль и функцию, а также имена параметров и значения, заключенные в скобки. Например, если в модуле <em>sample</em> есть функция <em>f</em>, и для нее требуется два параметра, <em>x</em> и <em>y</em>, нужно ввести следующее:</p>

  <p>&nbsp;&nbsp;&nbsp;&nbsp;<span class=
  "code">sample.f(x=firstvar, y=secondvar)</span></p>

  <p>firstvar и secondvar - имена переменных в активном наборе данных.</p>

  <p class="bullet">•&nbsp;Если не ввести название модуля, будет считаться, что функция была задана в предыдущем блоке BEGIN PROGRAM в текущей сессии или является встроенной функцией Python.</p>

  <p class="bullet">•&nbsp;Если у функции есть параметры, не имеющие имен, не вставляйте "parm=" в синтаксис.</p>

  <p class="bullet">•&nbsp;Значениями параметров могут быть имена переменных IBM SPSS Statistics, числа и буквы.</p>

  <p class="bullet">•&nbsp;Буквы должны быть заключены в тройные кавычки любого типа: " или '. Например, если <em>stringvar</em> - это текстовая переменная, а  <em>g</em> - это функция, объединяющая текстовые значения,</p>

  <p>&nbsp;&nbsp;&nbsp;&nbsp;<span class=
  "code">sample.g(x=firstvar, y='''-estimate''')</span></p>

  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;для каждого наблюдения добавит <em>-estimate</em> к значению <em>firstvar</em>. Чтобы использовать в буквенном значении кавычку такого же типа, как и кавычки, в которое заключено это значение, необходимо ввести кавычку два раза и поставить перед ней обратную косую черту - например, 'abc\''def'.</p>

  <p class="bullet">•&nbsp;Набор значений можно передать функции как список. Для этого значения нужно заключить в квадратные скобки - например, parm=[x,y,z].</p>

  <p class="bullet">•&nbsp;Имена модулей, функция и параметров регистрозависимы. Необходимо точно соблюдать регистр.</p>

  <p class="bullet">•&nbsp;Обратитесь к документации по функции, которую собираетесь использовать, чтобы понять, каким образом она вызывается.</p>

  <p><span class="runinhead">Формула инициализации.</span> Если формула преобразований включает в себя класс, требующий инициализации, например, справочную таблицу, здесь необходимо ввести выражение для инициализации. Она будет запущена перед проходом по данным.
  Инициализация создаст функцию с именем <i>func</i>, к которой будет обращаться формула преобразований.</p>

  <p>В приведенном здесь примере применяется функция vlookup из модуля <i>extendedTransforms</i>. Для этой функции требуется набор данных IBM SPSS Statistics, в котором содержатся справочные значения, а также имена ключевой переменной и переменной со значениями.. Чтобы использовать ее, необходимо ввести эти значения, чтобы производился поиск значений для переменной x.</p>

  <p class="bullet">•&nbsp;Инициализация:<br>
  &nbsp;&nbsp;&nbsp;&nbsp;<span class=
  "code">"extendedTransforms.vlookup(key='keyvar',
  value='valuevar', dataset='lookup')"</span></p>

  <p class="bullet">•&nbsp;Преобразование:<br>
  &nbsp;&nbsp;&nbsp;&nbsp;<span class="code">"func(x)"</span></p>

  <p><span class="runinhead">Преобразовать пользовательские пропущенные значения в системные</span>
Включите этот переключатель, чтобы преобразовать все пользовательские пропущенные значения в системные
перед вызовом функции Python.
  По умолчанию пользовательские пропущенные значения передаются без изменений.</p>

  <h2>Дополнительные возможности и информация</h2>

  <p>Это диалоговое окно генерирует синтаксис для команды расширения SPSSINC TRANS. Чтобы вывести справку для этой команды, введите следующую команду:</p>

  <p class="codeblock">SPSSINC TRANS /HELP.</p>Синтаксис позволяет обеспечить дополнительный контроль за значениями управляющих последовательностей, таких как \t.

  <p>Синтаксис содержит условное обозначение для списка переменных в формуле и начальные выражения через подкоманды VARIABLES, которые поддерживают TO в списке.</p>

  <p>Хотя эта команда работает аналогично стандартным командам синтаксиса IBM SPSS Statistics, в отличие, например, от команды COMPUTE каждая команда SPSSINC TRANS совершает отдельный проход по данным.
  Эту команду не следует использовать в блоках преобразований IBM SPSS Statistics, например, в DO IF</p>

  <p>Один из полезных для IBM SPSS Statistics источников функций - модуль extendedTransforms, доступный на Developer Central. Например, в нем есть функции для</p>

  <ul>
    <li>более гибкого преобразования текстовых дат в значения дат и обратно, чем это возможно со встроенными форматами дат (strtodatetime и datetimetostr).</li>

    <li>замены значений текстовых переменных, используя мощный язык паттернов (subs, templatesubs) или подсчета встречаемостей паттернов (matchcount).</li>

    <li>расчета репрезентаций похожих по звучанию имен (soundex, levenshteindistance, jaroWinkler, soundexallvalues).</li>

    <li>извлечения значений из справочных таблиц (vlookup).</li>

    <li>расчета расстояний между двумя точками на земле (sphDist, ellipseDist).</li>
  </ul>Откройте  extendedTransforms.py в текстовом редакторе, чтобы ознакомится с документацией по этим функциям.

  <p>В модуле math Python содержится целый ряд полезных функций, недоступных в стандартных преобразованиях.</p>

  <ul>
    <li>Вычисление факториала неотрицательного целого числа (factorial)</li>

    <li>Вычисление гиперболических тригонометрических функций (acosh, asinh, atanh, cosh, sinh, tanh)</li>
  </ul>Найти полезные функции можно при помощи поиска по указателю Python Standard Library, открыв справку Python и выбрав в панели Содержания Global Module Index.

  <p>Класс можно использовать в качестве функции если он соответствует определенным требованиям. Обратитесь к справке по синтаксису за более подробной информацией.</p>

  <p>Числовые значения IBM SPSS Statistics всегда передаются в код Python в качестве чисел с плавающей запятой. Если вызываемая функция требует int для значения IBM SPSS Statistics, используйте функцию int Python, но обратите внимание, что Python воспринимает системные пропущенные значения как значения None и не может передать их функции int.</p>

  <p>В качестве параметров можно использовать более сложные выражения. Обратитесь к справке по синтаксису за более подробной информацией. Если выражение очень сложное, возможно потребуется заключить его в кавычки.</p>

  <h2>Технические требования</h2>

  <p>Данный диалог требует надстройку интеграции для Python и команду расширения SPSSINC TRANS. Для IBM SPSS Statistics 19 и выше эти надстройка и команда расширения устанавливаются вместе с пакетом Essentials for Python. Дополнительные сведения смотрите в разделе How to Get Integration Plug-Ins (Получение подключаемых модулей интеграции).
Этот раздел находится в системе справки IBM SPSS Statistics: Core System &gt; Frequently Asked Questions (Основная система &gt; Часто задаваемые вопросы). Если вы скачали SPSSINC TRANS из SPSS Community, то следуйте инструкциям в приложенном файле readme.</p><br>
  <hr>

  <p style="font-size:80%;">© Copyright IBM Corp. 1989, 2013</p>
</body>
</html>
